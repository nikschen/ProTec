 echo "php_self";
 echo time();
echo $_SERVER['PHP_SELF'];
echo "<br>";
echo $_SERVER['SERVER_NAME'];
echo "<br>";
echo $_SERVER['HTTP_HOST'];
echo "<br>";
echo $_SERVER['HTTP_REFERER'];
echo "<br>";
echo $_SERVER['HTTP_USER_AGENT'];
echo "<br>";
echo $_SERVER['SCRIPT_NAME'];


eventuell am Ende dann:

<p>Alle Preise inkl. Mwst. zzgl. Versandkosten und Nachnahmegebühren (bei Auswahl)</p>




Für Header das LogoProtecTransparent
<img id="slide" src="src/images/LogoProtecTransparent.png" alt="Logo" width="10%" height="10%"  />



.navbar #Login {
    float: left;
    display: block;
    color: #000000;
    text-align: right;
    /*margin-top: 10px;*/
    /* margin-right: 20px;
     */
    /* padding: 14px 16px;*/
    text-decoration: none;
}

.navbar .LoginFields {
    text-align: right;
    /*display: block;*/
    color: rgb(50, 54, 63);
    margin-top: 20px;
    margin-bottom: 5px;
    margin-right: 20px;
    /* padding: 14px 16px;*/
}


<div class="LoginFields">
    <form action="FixedHeader.php">
      <label for="fname">Login:</label>
      <input type="text" id="E-Mail" name="fname" placeholder="Username or E-Mail"><br><br>
      <label for="lname">Password:</label>
      <input type="text" id="Password" name="lname" placeholder="Password"><br><br>
      <button type="submit" id="LoginButton">Login</button> 
  </form> 
    </div>




POST ARRAY im SIGNUP 


    Array
(
    [lastName] => sdfsdf
    [firstName] => Thomas
    [Anrede] => male
    [title] => dfsfsd
    [email] => sdafsd
    [passwort] => sdfsdfg
    [passwort-repeat] => sdgsdg
    [streetinfo] => sdfsfd
    [additionaladdressinfo] => 
    [zipcode] => asdas
    [city] => asda
    [country] => asd
    [submit] => Absenden
)

PasswortListe für Anmeldungen

KleinerLu@yahoo.com = Ines400-
Selen@giga.com = Laus+400
Oldmax@aol.de = Leber123?
LordyMcViva@googlemail.com = Makrophage1?





    public function update ($values) //takes values of an array with entries in scheme "AttributeToBeChanged=Value" and converts them into string in scheme: "Attribute=Value, Attribute=Value, Attribute=Value, ..."
     {
        $db=$GLOBALS['db'];
        print_r($values);
        $valueList=implode(',', $values);
        
        try
        {
            $sql = 'UPDATE ' . self::tablename() . ' SET ' . $valueList . ' WHERE CustomerID = ' . 5 ;//$this->data['id'];        //kann mir nicht herleiten woher diese data id stammen soll, ich meine es stellt keinen Zusammenhang dar
            print_r($sql);
            
            $statement = $db->prepare($sql);
            $statement->execute();
           exit(0);
            return true;
        }
        catch(\PDOException $e)
        {
            $errors[]='Error updating '.get_called_class();

        }
        return false;
     }

     
